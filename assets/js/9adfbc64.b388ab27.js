"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5697],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var r=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,l=e.mdxType,a=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=u(n),m=l,g=p["".concat(s,".").concat(m)]||p[m]||d[m]||a;return n?r.createElement(g,i(i({ref:t},c),{},{components:n})):r.createElement(g,i({ref:t},c))}));function g(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=n.length,i=new Array(a);i[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[p]="string"==typeof e?e:l,i[1]=o;for(var u=2;u<a;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},596:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>o,toc:()=>u});var r=n(3117),l=(n(7294),n(3905));const a={id:"leetcode1062",title:"LeetCode 1062 - Longest Repeating Substring",keywords:["algorithm","binary search"]},i=void 0,o={unversionedId:"leetcode/leetcode1062",id:"leetcode/leetcode1062",title:"LeetCode 1062 - Longest Repeating Substring",description:"\u984c\u76ee",source:"@site/docs/leetcode/leetcode1062.md",sourceDirName:"leetcode",slug:"/leetcode/leetcode1062",permalink:"/docs/leetcode/leetcode1062",draft:!1,tags:[],version:"current",frontMatter:{id:"leetcode1062",title:"LeetCode 1062 - Longest Repeating Substring",keywords:["algorithm","binary search"]},sidebar:"Docs",previous:{title:"LeetCode 739 - Daily Temperatures",permalink:"/docs/leetcode/leetcode739"},next:{title:"\u5728local\u74b0\u5883\u7528\u624b\u6a5f\u6e2c\u8a66\u548c debug",permalink:"/docs/web/mobile-testing"}},s={},u=[{value:"\u984c\u76ee",id:"\u984c\u76ee",level:3},{value:"\u601d\u8003",id:"\u601d\u8003",level:3},{value:"\u89e3\u6cd5",id:"\u89e3\u6cd5",level:3}],c={toc:u},p="wrapper";function d(e){let{components:t,...n}=e;return(0,l.kt)(p,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h3",{id:"\u984c\u76ee"},"\u984c\u76ee"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Given a string S, find out the length of the longest repeating substring(s). Return 0 if no repeating substring exists.")),(0,l.kt)("p",null,"Example 1:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'Input: "abcd"\nOutput: 0\nExplanation: There is no repeating substring.\n')),(0,l.kt)("p",null,"Example 2:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'Input: "abbaba"\nOutput: 2\nExplanation: The longest repeating substrings are "ab" and "ba", each of which occurs twice.\n')),(0,l.kt)("p",null,"Example 3:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'Input: "aabcaabdaab"\nOutput: 3\nExplanation: The longest repeating substring is "aab", which occurs 3 times.\n\n')),(0,l.kt)("p",null,"Example 4:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'Input: "aaaaa"\nOutput: 4\nExplanation: The longest repeating substring is "aaaa", which occurs twice.\n')),(0,l.kt)("p",null,"Constraints:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"The string S consists of only lowercase English letters from 'a' - 'z'."),(0,l.kt)("li",{parentName:"ol"},"1 <= S.length <= 1500")),(0,l.kt)("h3",{id:"\u601d\u8003"},"\u601d\u8003"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u6700\u9577\u7684 substring \u9577\u5ea6\u503c\u70ba\u4e00\u6709\u7bc4\u570d\u7684\u5340\u9593 0 \u81f3 n-1\uff0c\u4f8b\u5982\uff1a\u5b57\u4e32\u9577\u5ea6\u70ba 4 \u7684\u6700\u9577 substring \u9577\u5ea6\u70ba 3")),(0,l.kt)("h3",{id:"\u89e3\u6cd5"},"\u89e3\u6cd5"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Binary Search")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5047\u8a2d mid \u503c\u70ba\u7b54\u6848(\u6700\u9577\u7684 substring \u9577\u5ea6)"),(0,l.kt)("li",{parentName:"ul"},"\u5c07 mid \u4e1f\u5165\u9a57\u8b49\u51fd\u5f0f verifyLengthOfLRS\uff0c\u56de\u50b3 boolean"),(0,l.kt)("li",{parentName:"ul"},"\u5018\u82e5\u70ba true \uff0c\u5247\u8a72\u9577\u5ea6\u70ba\u53ef\u80fd\u89e3")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"function longestRepeatingSubstring(s) {\n  let l = 0;\n  let r = s.length - 1;\n  while (l < r) {\n    let mid = Math.floor(l + (r - l + 1) / 2);\n    //\u9a57\u8b49\u6700\u9577\u7684substring\u9577\u5ea6\u662f\u5426\u6b63\u78ba\n    if (verifyLengthOfLRS(s, mid)) {\n      l = mid;\n    } else {\n      r = mid - 1;\n    }\n  }\n  return l;\n}\n\n//\u5224\u65b7 mid \u662f\u5426\u70ba substring \u5408\u7406\u9577\u5ea6\nfunction verifyLengthOfLRS(s, mid) {\n  let arr = [];\n  for (let i = 0; i <= s.length - mid; i++) {\n    //\u64f7\u53d6\u8a72\u7279\u5b9a\u9577\u5ea6\u7684\u5b57\u4e32\n    let j = i + mid - 1;\n    let sub = s.substring(i, j + 1);\n    //\u5018\u82e5\u9663\u5217\u4e2d\u542b\u6709\u8a72\u5b57\u4e32(\u5373\u6709\u91cd\u8907)\uff0c\u5247\u56de\u50b3 true\n    if (arr.includes(sub)) {\n      return true;\n    }\n    arr.push(sub);\n  }\n  return false;\n}\n")))}d.isMDXComponent=!0}}]);