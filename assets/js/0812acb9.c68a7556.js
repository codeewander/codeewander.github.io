"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2441],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>f});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},s=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,l=e.originalType,c=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),u=p(r),m=o,f=u["".concat(c,".").concat(m)]||u[m]||d[m]||l;return r?n.createElement(f,a(a({ref:t},s),{},{components:r})):n.createElement(f,a({ref:t},s))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=r.length,a=new Array(l);a[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[u]="string"==typeof e?e:o,a[1]=i;for(var p=2;p<l;p++)a[p]=r[p];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},7707:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>p});var n=r(3117),o=(r(7294),r(3905));const l={id:"leetcode125",title:"LeetCode 125 - Valid Palindrome",keywords:["algorithm","string","two pointers"]},a=void 0,i={unversionedId:"leetcode/leetcode125",id:"leetcode/leetcode125",title:"LeetCode 125 - Valid Palindrome",description:"- Difficulty: Easy.",source:"@site/docs/leetcode/leetcode125.md",sourceDirName:"leetcode",slug:"/leetcode/leetcode125",permalink:"/docs/leetcode/leetcode125",draft:!1,tags:[],version:"current",frontMatter:{id:"leetcode125",title:"LeetCode 125 - Valid Palindrome",keywords:["algorithm","string","two pointers"]},sidebar:"Docs",previous:{title:"LeetCode 121 - Best Time to Buy and Sell Stock",permalink:"/docs/leetcode/leetcode121"},next:{title:"LeetCode 167 - Two Sum II - Input array is sorted",permalink:"/docs/leetcode/leetcode167"}},c={},p=[{value:"Problem",id:"problem",level:2},{value:"Solution",id:"solution",level:2}],s={toc:p},u="wrapper";function d(e){let{components:t,...r}=e;return(0,o.kt)(u,(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Difficulty: Easy."),(0,o.kt)("li",{parentName:"ul"},"Related Topics: Two Pointers, String."),(0,o.kt)("li",{parentName:"ul"},"Link: ",(0,o.kt)("a",{parentName:"li",href:"https://leetcode.com/problems/valid-palindrome"},"leetcode"))),(0,o.kt)("h2",{id:"problem"},"Problem"),(0,o.kt)("p",null,"Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Note:"),"\xa0For the purpose of this problem, we define empty string as valid palindrome."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Example 1:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'Input: "A man, a plan, a canal: Panama"\nOutput: true\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Example 2:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'Input: "race a car"\nOutput: false\n')),(0,o.kt)("h2",{id:"solution"},"Solution"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'/**\n * @param {string} s\n * @return {boolean}\n */\nvar isPalindrome = function (s) {\n  const str = s.trim(" ");\n  const regex = /[a-z0-9]/;\n  let i = 0;\n  let j = str.length - 1;\n\n  while (j > i) {\n    const letterForward = str[i].toLowerCase();\n    const letterBackward = str[j].toLowerCase();\n    if (!letterForward || !letterForward.match(regex)) {\n      i++;\n    } else if (!letterBackward || !letterBackward.match(regex)) {\n      j--;\n    } else if (letterForward === letterBackward) {\n      j--;\n      i++;\n    } else {\n      return false;\n    }\n  }\n  return true;\n};\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Explain:")),(0,o.kt)("p",null,"nope."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Complexity:")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Time complexity : O(n)."),(0,o.kt)("li",{parentName:"ul"},"Space complexity : O(n).")))}d.isMDXComponent=!0}}]);